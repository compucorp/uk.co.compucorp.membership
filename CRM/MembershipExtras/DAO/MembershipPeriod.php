<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2018
 *
 * Generated from /var/www/html/baswii/sites/default/files/civicrm/ext/uk.co.compucorp.membershipextras/xml/schema/CRM/MembershipExtras/MembershipPeriod.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:bf4ea04f3d39bfab2c277b51439b166a)
 */

/**
 * Database access object for the MembershipPeriod entity.
 */
class CRM_MembershipExtras_DAO_MembershipPeriod extends CRM_Core_DAO {

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  static $_tableName = 'membershipextras_membership_period';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  static $_log = TRUE;

  /**
   * Unique MembershipPeriod ID
   *
   * @var int unsigned
   */
  public $id;

  /**
   * ID of the membership.
   *
   * @var int unsigned
   */
  public $membership_id;

  /**
   * Start date of the period for the membership/recurring contribution.
   *
   * @var datetime
   */
  public $start_date;

  /**
   * End date of the period for the membership/recurring contribution.
   *
   * @var datetime
   */
  public $end_date;

  /**
   * Either civicrm_contribution or civicrm_contribution_recur.
   *
   * @var string
   */
  public $payment_entity_table;

  /**
   * ID of the payment entity.
   *
   * @var int unsigned
   */
  public $entity_id;

  /**
   * Whether the period has taken effect or not.
   *
   * @var boolean
   */
  public $is_active;

  /**
   * Whether it is an historical period created before the membership extras is installed.
   *
   * @var boolean
   */
  public $is_historic;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'membershipextras_membership_period';
    parent::__construct();
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static ::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'membership_id', 'civicrm_membership', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => 'Unique MembershipPeriod ID',
          'required' => TRUE,
          'table_name' => 'membershipextras_membership_period',
          'entity' => 'MembershipPeriod',
          'bao' => 'CRM_MembershipExtras_DAO_MembershipPeriod',
          'localizable' => 0,
        ],
        'membership_id' => [
          'name' => 'membership_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => 'ID of the membership.',
          'required' => TRUE,
          'table_name' => 'membershipextras_membership_period',
          'entity' => 'MembershipPeriod',
          'bao' => 'CRM_MembershipExtras_DAO_MembershipPeriod',
          'localizable' => 0,
        ],
        'start_date' => [
          'name' => 'start_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => ts('Start Date'),
          'description' => 'Start date of the period for the membership/recurring contribution.',
          'required' => TRUE,
          'table_name' => 'membershipextras_membership_period',
          'entity' => 'MembershipPeriod',
          'bao' => 'CRM_MembershipExtras_DAO_MembershipPeriod',
          'localizable' => 0,
        ],
        'end_date' => [
          'name' => 'end_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => ts('End Date'),
          'description' => 'End date of the period for the membership/recurring contribution.',
          'required' => FALSE,
          'table_name' => 'membershipextras_membership_period',
          'entity' => 'MembershipPeriod',
          'bao' => 'CRM_MembershipExtras_DAO_MembershipPeriod',
          'localizable' => 0,
        ],
        'payment_entity_table' => [
          'name' => 'payment_entity_table',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Payment Entity Table'),
          'description' => 'Either civicrm_contribution or civicrm_contribution_recur.',
          'required' => FALSE,
          'maxlength' => 64,
          'size' => CRM_Utils_Type::BIG,
          'table_name' => 'membershipextras_membership_period',
          'entity' => 'MembershipPeriod',
          'bao' => 'CRM_MembershipExtras_DAO_MembershipPeriod',
          'localizable' => 0,
        ],
        'entity_id' => [
          'name' => 'entity_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => 'ID of the payment entity.',
          'required' => FALSE,
          'table_name' => 'membershipextras_membership_period',
          'entity' => 'MembershipPeriod',
          'bao' => 'CRM_MembershipExtras_DAO_MembershipPeriod',
          'localizable' => 0,
        ],
        'is_active' => [
          'name' => 'is_active',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'description' => 'Whether the period has taken effect or not.',
          'required' => TRUE,
          'default' => 'false',
          'table_name' => 'membershipextras_membership_period',
          'entity' => 'MembershipPeriod',
          'bao' => 'CRM_MembershipExtras_DAO_MembershipPeriod',
          'localizable' => 0,
        ],
        'is_historic' => [
          'name' => 'is_historic',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'description' => 'Whether it is an historical period created before the membership extras is installed.',
          'required' => TRUE,
          'default' => 'false',
          'table_name' => 'membershipextras_membership_period',
          'entity' => 'MembershipPeriod',
          'bao' => 'CRM_MembershipExtras_DAO_MembershipPeriod',
          'localizable' => 0,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'ipextras_membership_period', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'ipextras_membership_period', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
