<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from /home/vagrant/buildkit/build/me4test6/web/sites/all/modules/civicrm/tools/extensions/uk.co.compucorp.membershipextras/xml/schema/CRM/MembershipExtras/AutoMembershipUpgradeRule.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:1d9c07a1da7a8b6f08144088e9354390)
 */

/**
 * Database access object for the AutoMembershipUpgradeRule entity.
 */
class CRM_MembershipExtras_DAO_AutoMembershipUpgradeRule extends CRM_Core_DAO {

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'membershipextras_auto_membership_upgrade_rule';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = FALSE;

  /**
   * @var int
   */
  public $id;

  /**
   * @var string
   */
  public $name;

  /**
   * @var string
   */
  public $label;

  /**
   * FK to civicrm_membership_type table
   *
   * @var int
   */
  public $from_membership_type_id;

  /**
   * FK to civicrm_membership_type table
   *
   * @var int
   */
  public $to_membership_type_id;

  /**
   * @var int
   */
  public $upgrade_trigger_date_type;

  /**
   * @var int
   */
  public $period_length;

  /**
   * @var int
   */
  public $period_length_unit;

  /**
   * FK to civicrm_group table
   *
   * @var int
   */
  public $filter_group;

  /**
   * @var int
   */
  public $weight;

  /**
   * @var bool
   */
  public $is_active;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'membershipextras_auto_membership_upgrade_rule';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   */
  public static function getEntityTitle() {
    return ts('Auto Membership Upgrade Rules');
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'from_membership_type_id', 'civicrm_membership_type', 'id');
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'to_membership_type_id', 'civicrm_membership_type', 'id');
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'filter_group', 'civicrm_group', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_MembershipExtras_ExtensionUtil::ts('Id'),
          'required' => TRUE,
          'where' => 'membershipextras_auto_membership_upgrade_rule.id',
          'table_name' => 'membershipextras_auto_membership_upgrade_rule',
          'entity' => 'AutoMembershipUpgradeRule',
          'bao' => 'CRM_MembershipExtras_DAO_AutoMembershipUpgradeRule',
          'localizable' => 0,
          'add' => NULL,
        ],
        'name' => [
          'name' => 'name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_MembershipExtras_ExtensionUtil::ts('Name'),
          'required' => 1,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextras_auto_membership_upgrade_rule.name',
          'table_name' => 'membershipextras_auto_membership_upgrade_rule',
          'entity' => 'AutoMembershipUpgradeRule',
          'bao' => 'CRM_MembershipExtras_DAO_AutoMembershipUpgradeRule',
          'localizable' => 0,
          'add' => NULL,
        ],
        'label' => [
          'name' => 'label',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_MembershipExtras_ExtensionUtil::ts('Label'),
          'required' => 1,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextras_auto_membership_upgrade_rule.label',
          'table_name' => 'membershipextras_auto_membership_upgrade_rule',
          'entity' => 'AutoMembershipUpgradeRule',
          'bao' => 'CRM_MembershipExtras_DAO_AutoMembershipUpgradeRule',
          'localizable' => 0,
          'add' => NULL,
        ],
        'from_membership_type_id' => [
          'name' => 'from_membership_type_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => CRM_MembershipExtras_ExtensionUtil::ts('FK to civicrm_membership_type table'),
          'required' => 1,
          'where' => 'membershipextras_auto_membership_upgrade_rule.from_membership_type_id',
          'table_name' => 'membershipextras_auto_membership_upgrade_rule',
          'entity' => 'AutoMembershipUpgradeRule',
          'bao' => 'CRM_MembershipExtras_DAO_AutoMembershipUpgradeRule',
          'localizable' => 0,
          'FKClassName' => 'CRM_Member_DAO_MembershipType',
          'add' => NULL,
        ],
        'to_membership_type_id' => [
          'name' => 'to_membership_type_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => CRM_MembershipExtras_ExtensionUtil::ts('FK to civicrm_membership_type table'),
          'required' => 1,
          'where' => 'membershipextras_auto_membership_upgrade_rule.to_membership_type_id',
          'table_name' => 'membershipextras_auto_membership_upgrade_rule',
          'entity' => 'AutoMembershipUpgradeRule',
          'bao' => 'CRM_MembershipExtras_DAO_AutoMembershipUpgradeRule',
          'localizable' => 0,
          'FKClassName' => 'CRM_Member_DAO_MembershipType',
          'add' => NULL,
        ],
        'upgrade_trigger_date_type' => [
          'name' => 'upgrade_trigger_date_type',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_MembershipExtras_ExtensionUtil::ts('Upgrade Trigger Date Type'),
          'required' => 1,
          'where' => 'membershipextras_auto_membership_upgrade_rule.upgrade_trigger_date_type',
          'default' => '1',
          'table_name' => 'membershipextras_auto_membership_upgrade_rule',
          'entity' => 'AutoMembershipUpgradeRule',
          'bao' => 'CRM_MembershipExtras_DAO_AutoMembershipUpgradeRule',
          'localizable' => 0,
          'pseudoconstant' => [
            'callback' => 'CRM_MembershipExtras_SelectValues_AutoMembershipUpgradeRules_TriggerDateType::getAll',
          ],
          'add' => NULL,
        ],
        'period_length' => [
          'name' => 'period_length',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_MembershipExtras_ExtensionUtil::ts('Period Length'),
          'required' => 1,
          'where' => 'membershipextras_auto_membership_upgrade_rule.period_length',
          'default' => '1',
          'table_name' => 'membershipextras_auto_membership_upgrade_rule',
          'entity' => 'AutoMembershipUpgradeRule',
          'bao' => 'CRM_MembershipExtras_DAO_AutoMembershipUpgradeRule',
          'localizable' => 0,
          'add' => NULL,
        ],
        'period_length_unit' => [
          'name' => 'period_length_unit',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_MembershipExtras_ExtensionUtil::ts('Period Length Unit'),
          'required' => 1,
          'where' => 'membershipextras_auto_membership_upgrade_rule.period_length_unit',
          'default' => '1',
          'table_name' => 'membershipextras_auto_membership_upgrade_rule',
          'entity' => 'AutoMembershipUpgradeRule',
          'bao' => 'CRM_MembershipExtras_DAO_AutoMembershipUpgradeRule',
          'localizable' => 0,
          'pseudoconstant' => [
            'callback' => 'CRM_MembershipExtras_SelectValues_AutoMembershipUpgradeRules_PeriodUnit::getAll',
          ],
          'add' => NULL,
        ],
        'filter_group' => [
          'name' => 'filter_group',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_MembershipExtras_ExtensionUtil::ts('Filter Group'),
          'description' => CRM_MembershipExtras_ExtensionUtil::ts('FK to civicrm_group table'),
          'where' => 'membershipextras_auto_membership_upgrade_rule.filter_group',
          'table_name' => 'membershipextras_auto_membership_upgrade_rule',
          'entity' => 'AutoMembershipUpgradeRule',
          'bao' => 'CRM_MembershipExtras_DAO_AutoMembershipUpgradeRule',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contact_DAO_Group',
          'add' => NULL,
        ],
        'weight' => [
          'name' => 'weight',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_MembershipExtras_ExtensionUtil::ts('Weight'),
          'required' => 1,
          'where' => 'membershipextras_auto_membership_upgrade_rule.weight',
          'table_name' => 'membershipextras_auto_membership_upgrade_rule',
          'entity' => 'AutoMembershipUpgradeRule',
          'bao' => 'CRM_MembershipExtras_DAO_AutoMembershipUpgradeRule',
          'localizable' => 0,
          'add' => NULL,
        ],
        'is_active' => [
          'name' => 'is_active',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'where' => 'membershipextras_auto_membership_upgrade_rule.is_active',
          'default' => '1',
          'table_name' => 'membershipextras_auto_membership_upgrade_rule',
          'entity' => 'AutoMembershipUpgradeRule',
          'bao' => 'CRM_MembershipExtras_DAO_AutoMembershipUpgradeRule',
          'localizable' => 0,
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'ipextras_auto_membership_upgrade_rule', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'ipextras_auto_membership_upgrade_rule', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
